package Ui;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Controller.InventoryController;
import Controller.OrdersController;
import Controller.UserController;
import Helper.IdGenerator;
import Helper.Validation;
import Models.Inventory;
import Models.OrderDetail;
import Models.Orders;
import Models.User;
import Models.User.UserRoles;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author slavi
 */
public class Addorder extends javax.swing.JFrame {

	OrdersController ordersController;
	InventoryController inventoryController;
	UserController userController;
    /**
     * Creates new form Addorder
     */
    public Addorder() {
    	ordersController = new OrdersController();
    	inventoryController = new InventoryController();
    	userController = new UserController();
        initComponents();
        populateCombobox();
        setLocationRelativeTo(null);
    }

    private void populateCombobox() {
    	List<String> supplierList = userController.getAllUserData().stream()
    			.filter(supplier -> supplier.getUserRole().equals(UserRoles.SUPPLIER.toString()))
				.map(User::getUserName)
				.collect(Collectors.toList());
    	List <String> inventoryList = inventoryController.getInventory().stream().map(Inventory::getInventoryName).collect(Collectors.toList());
    	cmb_OrderSupplier.setModel(new DefaultComboBoxModel(supplierList.toArray()));
    	cmb_InventoryName.setModel(new DefaultComboBoxModel(inventoryList.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmb_OrderSupplier = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_OrderList = new javax.swing.JTable();
        lbl_Supplier = new javax.swing.JLabel();
        cmb_InventoryName = new javax.swing.JComboBox<>();
        lbl_Inventory = new javax.swing.JLabel();
        lbl_OrderQuantity = new javax.swing.JLabel();
        txt_OrderQuantity = new javax.swing.JTextField();
        btn_Add = new javax.swing.JButton();
        btn_Confirm = new javax.swing.JButton();
        btn_Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmb_OrderSupplier.setModel(new javax.swing.DefaultComboBoxModel<>());

        tbl_OrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_OrderList);

        lbl_Supplier.setText("Supplier");

        cmb_InventoryName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbl_Inventory.setText("Inventory");

        lbl_OrderQuantity.setText("Quantity");

        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AddActionPerformed(evt);
            }
        });

        btn_Confirm.setText("Confirm");
        btn_Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ConfirmActionPerformed(evt);
            }
        });

        btn_Cancel.setText("Cancel");
        btn_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmb_OrderSupplier, 0, 122, Short.MAX_VALUE)
                                .addComponent(lbl_Supplier)
                                .addComponent(cmb_InventoryName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lbl_Inventory)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_OrderQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_OrderQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(btn_Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbl_Supplier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmb_OrderSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_Inventory)
                .addGap(4, 4, 4)
                .addComponent(cmb_InventoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_OrderQuantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_OrderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Confirm)
                    .addComponent(btn_Cancel))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ConfirmActionPerformed
    	getOrderData();
        Mainmenu Mainmenu = new Mainmenu();
        Mainmenu.setVisible(true);
        dispose();        
    }//GEN-LAST:event_Btn_ConfirmActionPerformed

    private List<OrderDetail> getTableData() {
    	System.out.println("Table row: " + tbl_OrderList.getRowCount());
    	List <OrderDetail> orderDetails = new ArrayList<OrderDetail>();
    	String inventoryName, inventoryId;
    	for (int count = 0; count < tbl_OrderList.getRowCount(); count++) {
    		inventoryName = tbl_OrderList.getValueAt(count, 0).toString();
    		inventoryId = inventoryController.getSingleInventoryByName(inventoryName).getInventoryId();
			orderDetails.add( new OrderDetail( "OD" + IdGenerator.generateUUID(), 
				inventoryId, 
				Integer.parseInt( tbl_OrderList.getValueAt(count, 1).toString() )
			));
		}
    	return orderDetails;
    }

    private void getOrderData() {
    	String managerId = User.currentUser.getUserId();
    	String supplierName = cmb_OrderSupplier.getSelectedItem().toString();
    	String supplierId = userController.getUserData(supplierName).getUserId();
    	List<OrderDetail> orderList = getTableData();
    	ordersController.createOrders(managerId, supplierId, orderList);
    }

    private void Btn_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelActionPerformed
        Mainmenu Mainmenu = new Mainmenu();
        Mainmenu.setVisible(true); 
        dispose();
    }//GEN-LAST:event_Btn_CancelActionPerformed

    private void Btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AddActionPerformed
    if (Validation.emptyTextfield(Arrays.asList(txt_OrderQuantity.getText()))) {
    	DefaultTableModel model = (DefaultTableModel)tbl_OrderList.getModel();
    	model.addRow(new Object[]{cmb_InventoryName.getSelectedItem()
    			,txt_OrderQuantity.getText()});    	
    } else {
    	JOptionPane.showMessageDialog(null, "All text fields cannot be empty", "Empty Fields Detected", 1);
    }
    }//GEN-LAST:event_Btn_AddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Addorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Addorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Addorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Addorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Addorder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Confirm;
    private javax.swing.JComboBox<String> cmb_InventoryName;
    private javax.swing.JComboBox<String> cmb_OrderSupplier;
    private javax.swing.JLabel lbl_Supplier;
    private javax.swing.JTable tbl_OrderList;
    private javax.swing.JTextField txt_OrderQuantity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Inventory;
    private javax.swing.JLabel lbl_OrderQuantity;
    // End of variables declaration//GEN-END:variables
}
